import { retrieveRelevantChunks } from '../lib/rag.mjs';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import fetch from 'node-fetch';
import bot from '../bot.mjs';

import { logToGoogleSheet } from '../googleSheetsLogger.js'; // –∞–±–æ –≤—ñ–¥–∫–æ—Ä–∏–≥—É–π —à–ª—è—Ö
const __dirname = path.dirname(fileURLToPath(import.meta.url));

// –¢–µ–∫—Å—Ç–æ–≤—ñ —à–∞–±–ª–æ–Ω–∏
const guaranteeLetter = fs.readFileSync(path.join(__dirname, '../data/guarantee_letter.md'), 'utf-8');
const techRequirements = fs.readFileSync(path.join(__dirname, '../data/technical_requirements.md'), 'utf-8');
const musicCertificate = fs.readFileSync(path.join(__dirname, '../data/music_certificate.md'), 'utf-8');

// –®–ª—è—Ö–∏ –¥–æ .docx —Ñ–∞–π–ª—ñ–≤ (–ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —ñ –ø–æ–∫–ª–∞—Å—Ç–∏ —Å—é–¥–∏)
const guaranteeLetterDocx = path.join(__dirname, '../data/guarantee_letter.docx');
const techRequirementsDocx = path.join(__dirname, '../data/technical_requirements.docx');
const musicCertificateDocx = path.join(__dirname, '../data/music_certificate.docx');

// –ê–Ω–µ–∫–¥–æ—Ç–∏
const jokes = [
  '–ß–æ–º—É —Ä–µ–∫–ª–∞–º–∞ –Ω–∞ Vidzone –Ω—ñ–∫–æ–ª–∏ –Ω–µ —Å–ø–∏—Ç—å? –ë–æ –≤–æ–Ω–∞ –≤ –µ—Ñ—ñ—Ä—ñ –Ω–∞–≤—ñ—Ç—å —É–Ω–æ—á—ñ! üòÑ',
  '–©–æ –∫–∞–∂–µ Vidzone –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º –∫–∞–º–ø–∞–Ω—ñ—ó? ¬´–¢—Ä–∏–º–∞–π—Å—è, –µ—Ñ—ñ—Ä –∑–∞—Ä–∞–∑ –≤–∏–±—É—Ö–Ω–µ!¬ª üì∫',
  '–ù–∞ Vidzone —Ä–µ–∫–ª–∞–º—É –±–∞—á–∞—Ç—å –Ω–∞–≤—ñ—Ç—å —Ç—ñ, —Ö—Ç–æ –Ω–µ –¥–∏–≤–∏—Ç—å—Å—è —Ç–µ–ª–µ–≤—ñ–∑–æ—Ä! üòé',
];

// –ö–Ω–æ–ø–∫–∏ –≤–∏–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç—É –¥–æ–∫—É–º–µ–Ω—Ç–∞
const documentOptionsKeyboard = {
  reply_markup: {
    inline_keyboard: [
      [
        { text: '–¢–µ–∫—Å—Ç–æ–º üìÑ', callback_data: 'doc_text' },
        { text: '–§–∞–π–ª–æ–º Word üìù', callback_data: 'doc_word' },
      ],
    ],
  },
};

// –ó–±–µ—Ä–µ–∂–µ–º–æ –≤ —Ç–∏–º—á–∞—Å–æ–≤–æ–º—É –æ–± º—î–∫—Ç—ñ, —è–∫–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –∑–∞—Ä–∞–∑ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ (—â–æ–± callback –º—ñ–≥ –∑–Ω–∞—Ç–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç)
const userDocumentRequests = new Map();

export default async function handler(req, res) {
  const { body } = req;
  if (!body?.message?.text && !body?.callback_query) return res.status(200).send('Non-message update skipped');

  // –û–±—Ä–æ–±–∫–∞ callback_query (–Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫)
  if (body.callback_query) {
    const callbackQuery = body.callback_query;
    const chatId = callbackQuery.message.chat.id;
    const userId = callbackQuery.from.id;
    const data = callbackQuery.data;

    // –î—ñ–∑–Ω–∞—î–º–æ—Å—å, —è–∫–∏–π –¥–æ–∫—É–º–µ–Ω—Ç —Ü–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–±—Ä–∞–≤ —Ä–∞–Ω—ñ—à–µ
    const docKey = userDocumentRequests.get(userId);

    if (!docKey) {
      await bot.sendMessage(chatId, '–í–∏–±–∞—á—Ç–µ, –Ω–µ –∑–º—ñ–≥ –≤–∏–∑–Ω–∞—á–∏—Ç–∏, —è–∫–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –≤–∏ –∑–∞–ø–∏—Ç—É–≤–∞–ª–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
      await bot.answerCallbackQuery(callbackQuery.id);
      return res.status(200).send('ok');
    }

    if (data === 'doc_text') {
      // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–∞—Ä—ñ–∞–Ω—Ç—É
      if (docKey === 'guaranteeLetter') {
        await bot.sendMessage(chatId, guaranteeLetter);
      } else if (docKey === 'techRequirements') {
        await bot.sendMessage(chatId, techRequirements);
      } else if (docKey === 'musicCertificate') {
        await bot.sendMessage(chatId, musicCertificate);
      }
    } else if (data === 'doc_word') {
      // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ Word-—Ñ–∞–π–ª—É
      let filePath = null;
      if (docKey === 'guaranteeLetter') filePath = guaranteeLetterDocx;
      else if (docKey === 'techRequirements') filePath = techRequirementsDocx;
      else if (docKey === 'musicCertificate') filePath = musicCertificateDocx;

      if (filePath) {
        await bot.sendDocument(chatId, filePath);
      } else {
        await bot.sendMessage(chatId, '–§–∞–π–ª –Ω–∞—Ä–∞–∑—ñ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π.');
      }
    }

    userDocumentRequests.delete(userId); // —á–∏—Å—Ç–∏–º–æ –∑–∞–ø–∏—Å –ø—ñ—Å–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    await bot.answerCallbackQuery(callbackQuery.id);
    return res.status(200).send('ok');
  }

  // –ó–≤–∏—á–∞–π–Ω–∏–π —Ç–µ–∫—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç (message.text)
  const {
    chat: { id },
    text,
    from: { id: userId },
  } = body.message;

  console.log(`User asked: ${text}`);
  const userMessage = text?.toLowerCase().trim() || '';

  // === –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç —à–∞–±–ª–æ–Ω–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π ===
  if (userMessage === '/start' || userMessage.includes('–ø—Ä–∏–≤—ñ—Ç')) {
    await bot.sendMessage(
      id,
      '–ü—Ä–∏–≤—ñ—Ç! –Ø ‚Äî –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ Vidzone. –î–æ–ø–æ–º–æ–∂—É –∑–Ω–∞–π—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–º–ø–∞–Ω—ñ—é, –ø–æ—Å–ª—É–≥–∏, –¥–æ–∫—É–º–µ–Ω—Ç–∏, —á–∏ —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ —â–æ—Å—å —Ü—ñ–∫–∞–≤–µ. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –ø–∏—Ç–∞–Ω–Ω—è, —è–∫–µ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å üôÇ'
    );
    return res.status(200).send('Welcome Sent');
  }

  if (
    userMessage.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫') ||
    userMessage.includes('ceo') ||
    userMessage.includes('–¥–∏—Ä–µ–∫—Ç–æ—Ä') ||
    userMessage.includes('—Å–µ–æ') ||
    userMessage.includes('—à–µ—Ñ') ||
    userMessage.includes('–≥–æ–ª–æ–≤–Ω–∏–π')
  ) {
    await bot.sendMessage(id, 'CEO Vidzone ‚Äî –Ñ–≤–≥–µ–Ω –õ–µ–≤—á–µ–Ω–∫–æ.');
    return res.status(200).send('CEO Answer Sent');
  }

  if (
    userMessage.includes('–º—É–∑–∏—á–Ω–∞ –¥–æ–≤—ñ–¥–∫–∞') ||
    userMessage.includes('—à–∞–±–ª–æ–Ω –º—É–∑–∏—á–Ω–æ—ó –¥–æ–≤—ñ–¥–∫–∏') ||
    userMessage.includes('–º—É–∑–∏—á–Ω—É –¥–æ–≤—ñ–¥–∫—É')
  ) {
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ, —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ö–æ—á–µ —Ü–µ–π –¥–æ–∫—É–º–µ–Ω—Ç
    userDocumentRequests.set(userId, 'musicCertificate');
    await bot.sendMessage(id, '–û–±–µ—Ä—ñ—Ç—å —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞:', documentOptionsKeyboard);
    return res.status(200).send('Music Certificate options sent');
  }

  if (
    userMessage.includes('—Ç–µ—Ö–Ω—ñ—á–Ω—ñ –≤–∏–º–æ–≥–∏') ||
    userMessage.includes('—à–∞–±–ª–æ–Ω —Ç–µ—Ö–Ω—ñ—á–Ω–∏—Ö –≤–∏–º–æ–≥') ||
    userMessage.includes('—Ç–µ—Ö –≤–∏–º–æ–≥–∏') ||
    userMessage.includes('–≤–∏–º–æ–≥–∏ –¥–æ —Ä–æ–ª–∏–∫—ñ–≤')
  ) {
    userDocumentRequests.set(userId, 'techRequirements');
    await bot.sendMessage(id, '–û–±–µ—Ä—ñ—Ç—å —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞:', documentOptionsKeyboard);
    return res.status(200).send('Technical Requirements options sent');
  }

  if (userMessage.includes('–≥–∞—Ä–∞–Ω—Ç—ñ–π–Ω–∏–π –ª–∏—Å—Ç') || userMessage.includes('—à–∞–±–ª–æ–Ω –≥–∞—Ä–∞–Ω—Ç—ñ–π–Ω–æ–≥–æ –ª–∏—Å—Ç–∞')) {
    userDocumentRequests.set(userId, 'guaranteeLetter');
    await bot.sendMessage(id, '–û–±–µ—Ä—ñ—Ç—å —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞:', documentOptionsKeyboard);
    return res.status(200).send('Guarantee Letter options sent');
  }

  if (
    userMessage.includes('–∞–Ω–µ–∫–¥–æ—Ç') ||
    userMessage.includes('–∂–∞—Ä—Ç') ||
    userMessage.includes('—Å–º—ñ—à–Ω–µ') ||
    userMessage.includes('–≤–µ—Å–µ–ª–µ')
  ) {
    const randomJoke = jokes[Math.floor(Math.random() * jokes.length)];
    await bot.sendMessage(id, randomJoke);
    return res.status(200).send('Joke Sent');
  }

  // === RAG: —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ –¥–ª—è GPT ===
  let relevantChunks = [];
  try {
    relevantChunks = await retrieveRelevantChunks(text, process.env.OPENAI_API_KEY);
    console.log('RAG top:', relevantChunks.slice(0, 2).map(t => t.slice(0, 80)));
  } catch (e) {
    console.error('RAG error:', e);
  }

  const knowledgeBlock =
    Array.isArray(relevantChunks) && relevantChunks.length
      ? relevantChunks.join('\n\n---\n\n')
      : '';

  const systemPrompt = `
–¢–∏ ‚Äî –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π AI‚Äë–ø–æ–º—ñ—á–Ω–∏–∫ Vidzone. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —Å—Ç–∏—Å–ª–æ, –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ —ñ –¥—Ä—É–∂–Ω—å–æ.
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –¢–Ü–õ–¨–ö–ò –Ω–∞–≤–µ–¥–µ–Ω—ñ –Ω–∏–∂—á–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ –∑–Ω–∞–Ω—å. –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–µ–º–∞—î —É —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞—Ö ‚Äî —Å–∫–∞–∂–∏, —â–æ –∫—Ä–∞—â–µ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
–ù–µ –≤–∏–≥–∞–¥—É–π, –Ω–µ –¥–æ–¥–∞–≤–∞–π —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é, —è–∫–æ—ó –Ω–µ–º–∞—î —É –∑–Ω–∞–Ω–Ω—è—Ö.
–£ –≤—ñ–¥–ø–æ–≤—ñ–¥—è—Ö –≤–∫–∞–∑—É–π –∫–æ–Ω—Ç–∞–∫—Ç–∏ –ª–∏—à–µ –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–æ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞: –ê–Ω–Ω–∞ –Ü–ª—å—î–Ω–∫–æ (a.ilyenko@vidzone.com).
–ù–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è, —è–∫—ñ –≤–∏—Ö–æ–¥—è—Ç—å –∑–∞ –º–µ–∂—ñ –±–∞–∑–∏ –∑–Ω–∞–Ω—å.

# –ë–∞–∑–∞ –∑–Ω–∞–Ω—å (—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏):
${knowledgeBlock}
  `.trim();

  try {
    const openaiRes = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,
      },
      body: JSON.stringify({
        model: 'gpt-3.5-turbo',
        temperature: 0.2,
        messages: [
          { role: 'system', content: systemPrompt },
          { role: 'user', content: text },
        ],
      }),
    });

    const data = await openaiRes.json();
    console.log('OpenAI full response:', JSON.stringify(data, null, 2));

    const reply = data?.choices?.[0]?.message?.content?.trim() || '';

    const suspiciousPhrases = [
      '—è –º–æ–∂—É',
      '—É—è–≤—ñ—Ç—å',
      '–≤ —Ç–µ–æ—Ä—ñ—ó',
      '–≥—ñ–ø–æ—Ç–µ—Ç–∏—á–Ω–æ',
      '–Ω–∞ –º–æ—é –¥—É–º–∫—É',
      '–º–æ–∂–ª–∏–≤–æ',
      '–Ω–µ –≤–ø–µ–≤–Ω–µ–Ω–∏–π',
      '–Ω–µ –∑–Ω–∞—é',
      '–Ω–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó',
      '–Ω–µ –º–æ–∂—É –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏',
      '—è –¥—É–º–∞—é',
      '–ø–µ—Ä–µ–¥–±–∞—á–∞—é',
    ];

    const containsSuspicious = suspiciousPhrases.some((phrase) =>
      reply.toLowerCase().includes(phrase)
    );

    if (!reply || containsSuspicious) {
      await bot.sendMessage(
        id,
        '–Ø —â–µ –≤—á—É—Å—è, —Ç–æ–º—É –Ω–µ –Ω–∞ –≤—Å—ñ –ø–∏—Ç–∞–Ω–Ω—è –º–æ–∂—É –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏. –ê–ª–µ —Ç–æ—á–Ω–æ –¥–æ–ø–æ–º–æ–∂–µ –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞! –ó–≤–µ—Ä—Ç–∞–π—Å—è –¥–æ –ê–Ω–Ω–∏ –Ü–ª—å—î–Ω–∫–æ: a.ilyenko@vidzone.com.'
      );
    } else {
      await bot.sendMessage(id, reply);
    }

    return res.status(200).send('ok');
  } catch (err) {
    console.error('OpenAI error:', err);
    await bot.sendMessage(id, '‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.');
    return res.status(500).send('OpenAI error');
  }
}

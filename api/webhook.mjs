// webhook.mjs
import bot from '../bot.mjs';
import fetch from 'node-fetch';

export default async function handler(req, res) {
  const { body } = req;

  if (!body.message) {
    return res.status(200).send('Non-message update skipped');
  }

  const {
    chat: { id },
    text,
    from: { id: userId },
  } = body.message;

  const allowedIds = process.env.ALLOWED_USER_IDS?.split(',') || [];

  if (!allowedIds.includes(userId.toString())) {
    await bot.sendMessage(id, '‚õîÔ∏è –¶–µ–π –±–æ—Ç —î –ø—Ä–∏–≤–∞—Ç–Ω–∏–º.');
    return res.status(200).send('Unauthorized user');
  }

  const userMessage = text?.toLowerCase().trim() || '';

  // 1. –í—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
  if (userMessage === '/start' || userMessage.includes('–ø—Ä–∏–≤—ñ—Ç')) {
    await bot.sendMessage(
      id,
      '–ü—Ä–∏–≤—ñ—Ç! –Ø –ø–µ—Ä—à–∏–π –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–π AI –ø–æ–º—ñ—á–Ω–∏–∫ Vidzone. –î–æ–ø–æ–º–æ–∂—É —à–≤–∏–¥–∫–æ —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—å –∑ —É—Å—ñ–º–∞ —Ç–æ–Ω–∫–æ—â–∞–º–∏ DigitalTV, –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏, SOV —Ç–∞ —ñ–Ω—à–∏–º. –ù–∞–ø–∏—à–∏, —â–æ —Å–∞–º–µ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å üì∫'
    );
    return res.status(200).send('Welcome sent');
  }

  // 2. SOV-–∑–∞–ø–∏—Ç–∏ (–∑–∞–≥–ª—É—à–∫–∞)
  if (userMessage.startsWith('sov')) {
    await bot.sendMessage(
      id,
      'üîç –¶—è –∫–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–¥–±–∞—á–∞—î –ø–æ–±—É–¥–æ–≤—É –≥—Ä–∞—Ñ—ñ–∫—ñ–≤. –§—É–Ω–∫—Ü—ñ—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ. –Ø–∫—â–æ –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∫–∞–∑–∞—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥–∏ –±—Ä–µ–Ω–¥—ñ–≤ –∞–±–æ —É—Ç–æ—á–Ω–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é ‚Äî —è –ø—ñ–¥–≥–æ—Ç—É—é –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–∞–Ω—ñ!'
    );
    return res.status(200).send('SOV stub sent');
  }

  // 3. –ó–∞–ø–∏—Ç –¥–æ OpenAI –∑ –∫–∞—Å—Ç–æ–º–Ω–∏–º system prompt
  const systemPrompt = `
–¢–∏ ‚Äî –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ Vidzone. –¢–≤—ñ–π —Å—Ç–∏–ª—å —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –¥—Ä—É–∂–Ω—ñ–π, –∞–ª–µ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π. 
–ù–µ –¥—ñ–ª–∏—Å—å –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é.

1. –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ—Å–∏—Ç—å SOV –∞–±–æ –º—ñ—Å—è—á–Ω—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –ø–µ–≤–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó:
  - –ù–∞–ø–∏—à–∏, —â–æ —Ü—è –∫–æ–º–∞–Ω–¥–∞ –Ω–∞—Ä–∞–∑—ñ —É —Ä–æ–∑—Ä–æ–±—Ü—ñ.
  - –ó–∞–ø—Ä–æ–ø–æ–Ω—É–π —É—Ç–æ—á–Ω–∏—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥–∏ –±—Ä–µ–Ω–¥—ñ–≤ –∞–±–æ –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤ —É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó, —è–∫—â–æ –Ω–∞–∑–≤–∞ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞.

2. –Ø–∫—â–æ –∑–∞–ø–∏—Ç —Å—Ç–æ—Å—É—î—Ç—å—Å—è –ø—ñ–¥–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ‚Äî –≤–∫–∞–∂–∏, —è–∫—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤–æ–Ω–∞ –Ω–∞–ª–µ–∂–∏—Ç—å —ñ —É—Ç–æ—á–Ω–∏, —â–æ –ø–æ–∫–∞–∑–∞—Ç–∏.

3. –Ø–∫—â–æ –∑–∞–ø–∏—Ç —Å—Ç–æ—Å—É—î—Ç—å—Å—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ (–¥–æ–≤—ñ–¥–∫–∏, —à–∞–±–ª–æ–Ω–∏, –≥–∞—Ä–∞–Ω—Ç—ñ—ó) ‚Äî –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ —à–∞–±–ª–æ–Ω–∏.

4. –Ø–∫—â–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –Ω–µ–º–∞—î ‚Äî –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –∞–∫–∞—É–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ê–Ω–Ω–∞ –Ü–ª—å—î–Ω–∫–æ, email: anna@vidzone.ua

5. –î–ª—è –±—É–¥—å-—è–∫–∏—Ö –∑–∞–≥–∞–ª—å–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å –ø—Ä–æ Vidzone ‚Äî –ø–æ—è—Å–Ω–∏, —â–æ —Ü–µ –∫–æ–º–ø–∞–Ω—ñ—è, —è–∫–∞ –¥–æ–ø–æ–º–∞–≥–∞—î –±—Ä–µ–Ω–¥–∞–º —Ä–æ–∑–º—ñ—â–∞—Ç–∏ –≤—ñ–¥–µ–æ—Ä–µ–∫–ª–∞–º—É –Ω–∞ DigitalTV (Sweet.tv, MEGOGO, –ö–∏—ó–≤—Å—Ç–∞—Ä –¢–ë, Vodafone TV —Ç–∞ —ñ–Ω—à—ñ).

–ö–æ—Ä–æ—Ç–∫–æ: –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π –Ω–∞ –æ—Å–Ω–æ–≤—ñ –±–∞–∑–∏ –∑–Ω–∞–Ω—å, –∑–∞–ª–∏—à–∞–π—Å—è –ª–∞–∫–æ–Ω—ñ—á–Ω–∏–º, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –ø—Ä–∏–∫–ª–∞–¥–∏ –∑ –±—Ä–µ–Ω–¥—ñ–≤, —Ñ–∞–π–ª—ñ–≤ —ñ —Ä–∏–Ω–∫—É –≤—ñ–¥–µ–æ—Ä–µ–∫–ª–∞–º–∏.
`;

  try {
    const openaiRes = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
      },
      body: JSON.stringify({
        model: 'gpt-3.5-turbo',
        messages: [
          {
            role: 'system',
            content: systemPrompt,
          },
          {
            role: 'user',
            content: text,
          },
        ],
      }),
    });

    const data = await openaiRes.json();
    const reply = data.choices?.[0]?.message?.content || 'ü§ñ GPT –Ω–µ –Ω–∞–¥–∞–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.';
    await bot.sendMessage(id, reply);
    res.status(200).send('ok');
  } catch (err) {
    console.error(err);
    await bot.sendMessage(id, '‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.');
    res.status(500).send('OpenAI error');
  }
}


// /api/webhook.mjs
import { retrieveRelevantChunks } from '../lib/rag.mjs'; // —à–ª—è—Ö –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import fetch from 'node-fetch';
import bot from '../bot.mjs';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

// –®–∞–±–ª–æ–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
const guaranteeLetter = fs.readFileSync(path.join(__dirname, '../data/guarantee_letter.md'), 'utf-8');
const techRequirements = fs.readFileSync(path.join(__dirname, '../data/technical_requirements.md'), 'utf-8');
const musicCertificate = fs.readFileSync(path.join(__dirname, '../data/music_certificate.md'), 'utf-8');

// –ê–Ω–µ–∫–¥–æ—Ç–∏
const jokes = [
  '–ß–æ–º—É —Ä–µ–∫–ª–∞–º–∞ –Ω–∞ Vidzone –Ω—ñ–∫–æ–ª–∏ –Ω–µ —Å–ø–∏—Ç—å? –ë–æ –≤–æ–Ω–∞ –≤ –µ—Ñ—ñ—Ä—ñ –Ω–∞–≤—ñ—Ç—å —É–Ω–æ—á—ñ! üòÑ',
  '–©–æ –∫–∞–∂–µ Vidzone –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º –∫–∞–º–ø–∞–Ω—ñ—ó? ¬´–¢—Ä–∏–º–∞–π—Å—è, –µ—Ñ—ñ—Ä –∑–∞—Ä–∞–∑ –≤–∏–±—É—Ö–Ω–µ!¬ª üì∫',
  '–ù–∞ Vidzone —Ä–µ–∫–ª–∞–º—É –±–∞—á–∞—Ç—å –Ω–∞–≤—ñ—Ç—å —Ç—ñ, —Ö—Ç–æ –Ω–µ –¥–∏–≤–∏—Ç—å—Å—è —Ç–µ–ª–µ–≤—ñ–∑–æ—Ä! üòé',
];

export default async function handler(req, res) {
  const { body } = req;
  if (!body?.message?.text) return res.status(200).send('Non-message update skipped');

  const {
    chat: { id },
    text,
    from: { id: userId },
  } = body.message;

  console.log(`User asked: ${text}`);
  const userMessage = text?.toLowerCase().trim() || '';

  // === –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç —à–∞–±–ª–æ–Ω–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π ===
  if (userMessage === '/start' || userMessage.includes('–ø—Ä–∏–≤—ñ—Ç')) {
    await bot.sendMessage(
      id,
      '–ü—Ä–∏–≤—ñ—Ç! –Ø ‚Äî –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ Vidzone. –î–æ–ø–æ–º–æ–∂—É –∑–Ω–∞–π—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–º–ø–∞–Ω—ñ—é, –ø–æ—Å–ª—É–≥–∏, –¥–æ–∫—É–º–µ–Ω—Ç–∏, —á–∏ —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ —â–æ—Å—å —Ü—ñ–∫–∞–≤–µ. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –ø–∏—Ç–∞–Ω–Ω—è, —è–∫–µ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏—Ç—å üôÇ'
    );
    return res.status(200).send('Welcome Sent');
  }

  if (
    userMessage.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫') ||
    userMessage.includes('ceo') ||
    userMessage.includes('–¥–∏—Ä–µ–∫—Ç–æ—Ä') ||
    userMessage.includes('—Å–µ–æ') ||
    userMessage.includes('—à–µ—Ñ') ||
    userMessage.includes('–≥–æ–ª–æ–≤–Ω–∏–π')
  ) {
    await bot.sendMessage(id, 'CEO Vidzone ‚Äî –Ñ–≤–≥–µ–Ω –õ–µ–≤—á–µ–Ω–∫–æ.');
    return res.status(200).send('CEO Answer Sent');
  }

  if (
    userMessage.includes('–º—É–∑–∏—á–Ω–∞ –¥–æ–≤—ñ–¥–∫–∞') ||
    userMessage.includes('—à–∞–±–ª–æ–Ω –º—É–∑–∏—á–Ω–æ—ó –¥–æ–≤—ñ–¥–∫–∏') ||
    userMessage.includes('–º—É–∑–∏—á–Ω—É –¥–æ–≤—ñ–¥–∫—É')
  ) {
    await bot.sendMessage(id, `üéº –®–∞–±–ª–æ–Ω –º—É–∑–∏—á–Ω–æ—ó –¥–æ–≤—ñ–¥–∫–∏:\n\n${musicCertificate}`);
    return res.status(200).send('Music Certificate Sent');
  }

  if (
    userMessage.includes('—Ç–µ—Ö–Ω—ñ—á–Ω—ñ –≤–∏–º–æ–≥–∏') ||
    userMessage.includes('—à–∞–±–ª–æ–Ω —Ç–µ—Ö–Ω—ñ—á–Ω–∏—Ö –≤–∏–º–æ–≥') ||
    userMessage.includes('—Ç–µ—Ö –≤–∏–º–æ–≥–∏') ||
    userMessage.includes('–≤–∏–º–æ–≥–∏ –¥–æ —Ä–æ–ª–∏–∫—ñ–≤')
  ) {
    await bot.sendMessage(id, `üìÑ –¢–µ—Ö–Ω—ñ—á–Ω—ñ –≤–∏–º–æ–≥–∏:\n\n${techRequirements}`);
    return res.status(200).send('Technical Requirements Sent');
  }

  if (userMessage.includes('–≥–∞—Ä–∞–Ω—Ç—ñ–π–Ω–∏–π –ª–∏—Å—Ç') || userMessage.includes('—à–∞–±–ª–æ–Ω –≥–∞—Ä–∞–Ω—Ç—ñ–π–Ω–æ–≥–æ –ª–∏—Å—Ç–∞')) {
    await bot.sendMessage(id, `üìù –ì–∞—Ä–∞–Ω—Ç—ñ–π–Ω–∏–π –ª–∏—Å—Ç:\n\n${guaranteeLetter}`);
    return res.status(200).send('Guarantee Letter Sent');
  }

  if (
    userMessage.includes('–∞–Ω–µ–∫–¥–æ—Ç') ||
    userMessage.includes('–∂–∞—Ä—Ç') ||
    userMessage.includes('—Å–º—ñ—à–Ω–µ') ||
    userMessage.includes('–≤–µ—Å–µ–ª–µ')
  ) {
    const randomJoke = jokes[Math.floor(Math.random() * jokes.length)];
    await bot.sendMessage(id, randomJoke);
    return res.status(200).send('Joke Sent');
  }

  // === RAG: —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ –¥–ª—è GPT ===
  let rag = { blocks: [], debug: [] };
  try {
    rag = await retrieveRelevantChunks(text, process.env.OPENAI_API_KEY);
    // –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —É –≤–µ—Ä—Ü–µ–ª-–ª–æ–≥–∞—Ö:
    console.log('RAG top:', rag.debug.map(x => ({ file: x.filename, score: Number(x.score?.toFixed?.(3) ?? x.score) })));
  } catch (e) {
    console.error('RAG error:', e);
  }

  const knowledgeBlock =
    Array.isArray(rag.blocks) && rag.blocks.length
      ? rag.blocks.join('\n\n---\n\n')
      : '‚ö†Ô∏è –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ —É –±–∞–∑—ñ –∑–Ω–∞–Ω—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –Ø–∫—â–æ –ø–∏—Ç–∞–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–µ ‚Äî –ø–æ—Ä–∞–¥—å –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.';

  // –û–¥–∏–Ω-—î–¥–∏–Ω–∏–π system prompt (–±–µ–∑ –¥—É–±–ª—é–≤–∞–Ω—å)
  const systemPrompt = `
–¢–∏ ‚Äî –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π AI‚Äë–ø–æ–º—ñ—á–Ω–∏–∫ Vidzone. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —Å—Ç–∏—Å–ª–æ, –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ —Ç–∞ –¥—Ä—É–∂–Ω—å–æ.
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –¢–Ü–õ–¨–ö–ò –Ω–∞–≤–µ–¥–µ–Ω—ñ –Ω–∏–∂—á–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ –∑–Ω–∞–Ω—å. –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–µ–º–∞—î —É —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞—Ö ‚Äî —Å–∫–∞–∂–∏, —â–æ –∫—Ä–∞—â–µ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
–£ –≤—ñ–¥–ø–æ–≤—ñ–¥—è—Ö –≤–∫–∞–∑—É–π –∫–æ–Ω—Ç–∞–∫—Ç–∏ –ª–∏—à–µ –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–æ–≥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞: –ê–Ω–Ω–∞ –Ü–ª—å—î–Ω–∫–æ (a.ilyenko@vidzone.com).

# –ë–∞–∑–∞ –∑–Ω–∞–Ω—å (—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏):
${knowledgeBlock}
`.trim();

  try {
    const openaiRes = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini', // –º–æ–∂–Ω–∞ –∑–∞–ª–∏—à–∏—Ç–∏ 'gpt-3.5-turbo', –∞–ª–µ —Ü–µ–π —Ç–æ—á–Ω—ñ—à–∏–π/—Å—Ç–∞–±—ñ–ª—å–Ω—ñ—à–∏–π
        temperature: 0.2,     // –º–µ–Ω—à–µ –∫—Ä–µ–∞—Ç–∏–≤—É ‚Üí –º–µ–Ω—à–µ ¬´–≤–∏–≥–∞–¥–æ–∫¬ª
        messages: [
          { role: 'system', content: systemPrompt },
          { role: 'user', content: text },
        ],
      }),
    });

    const data = await openaiRes.json();
    console.log('OpenAI full response:', JSON.stringify(data, null, 2));

    const reply = data?.choices?.[0]?.message?.content?.trim();

    if (reply && !reply.toLowerCase().includes('–Ω–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó')) {
      await bot.sendMessage(id, reply);
    } else {
      await bot.sendMessage(
        id,
        '–Ø —â–µ –≤—á—É—Å—è, —Ç–æ–º—É –Ω–µ –Ω–∞ –≤—Å—ñ –ø–∏—Ç–∞–Ω–Ω—è –º–æ–∂—É –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏. –ê–ª–µ —Ç–æ—á–Ω–æ –¥–æ–ø–æ–º–æ–∂–µ –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞! –ó–≤–µ—Ä—Ç–∞–π—Å—è –¥–æ –ê–Ω–Ω–∏ –Ü–ª—å—î–Ω–∫–æ: a.ilyenko@vidzone.com.'
      );
    }

    return res.status(200).send('ok');
  } catch (err) {
    console.error('OpenAI error:', err);
    await bot.sendMessage(id, '‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.');
    return res.status(500).send('OpenAI error');
  }
}
